// <auto-generated />
using System;

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

using RTN.API.Data;

#nullable disable

namespace RTN.API.Migrations {
    [DbContext(typeof(MyDbContext))]
    [Migration("20240826190539_IndividualNoties")]
    partial class IndividualNoties {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder) {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RTN.API.Data.Entities.LoginEntity", b => {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid?>("AuthToken")
                    .HasMaxLength(250)
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime?>("AuthTokenExpiryTime")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("CreatedAt")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("datetime2")
                    .HasDefaultValueSql("GETDATE()");

                b.Property<string>("PasswordHash")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<Guid?>("RefreshToken")
                    .HasMaxLength(250)
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime?>("RefreshTokenExpiryTime")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("UpdatedAt")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("datetime2")
                    .HasDefaultValueSql("GETDATE()");

                b.Property<Guid>("UserId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("UserId");

                b.ToTable("LoginEntity");
            });

            modelBuilder.Entity("RTN.API.Data.Entities.NotificationEntity", b => {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Content")
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnType("nvarchar(250)");

                b.Property<DateTime>("CreatedAt")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("datetime2")
                    .HasDefaultValueSql("GETDATE()");

                b.Property<bool>("IsRead")
                    .HasColumnType("bit");

                b.Property<string>("RedirectUrl")
                    .HasMaxLength(250)
                    .HasColumnType("nvarchar(250)");

                b.Property<DateTime>("UpdatedAt")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("datetime2")
                    .HasDefaultValueSql("GETDATE()");

                b.Property<Guid?>("UserId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("UserId");

                b.ToTable("NotificationEntity");
            });

            modelBuilder.Entity("RTN.API.Data.Entities.UserEntity", b => {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("CreatedAt")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("datetime2")
                    .HasDefaultValueSql("GETDATE()");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnType("nvarchar(250)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnType("nvarchar(250)");

                b.Property<DateTime>("UpdatedAt")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("datetime2")
                    .HasDefaultValueSql("GETDATE()");

                b.HasKey("Id");

                b.ToTable("UserEntity");
            });

            modelBuilder.Entity("RTN.API.Data.Entities.LoginEntity", b => {
                b.HasOne("RTN.API.Data.Entities.UserEntity", "User")
                    .WithMany("Logins")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("User");
            });

            modelBuilder.Entity("RTN.API.Data.Entities.NotificationEntity", b => {
                b.HasOne("RTN.API.Data.Entities.UserEntity", "User")
                    .WithMany("Notifications")
                    .HasForeignKey("UserId");

                b.Navigation("User");
            });

            modelBuilder.Entity("RTN.API.Data.Entities.UserEntity", b => {
                b.Navigation("Logins");

                b.Navigation("Notifications");
            });
#pragma warning restore 612, 618
        }
    }
}
